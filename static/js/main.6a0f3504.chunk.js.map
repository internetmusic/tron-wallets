{"version":3,"sources":["components/Table/Table.module.scss","components/List/ListElement/ListElement.module.scss","components/Form/Form.module.scss","components/List/List.module.scss","App.module.scss","components/Form/Form.js","components/List/ListElement/ListElement.js","components/List/List.js","assets/up.svg","assets/down.svg","components/Table/Table.js","App.js","index.js"],"names":["module","exports","Form","add","adresses","useState","disable","setDisabled","adressError","setError","message","setMessage","onSubmit","e","preventDefault","form","document","querySelector","adress","value","options","method","headers","body","includes","fetch","then","res","json","result","prevArray","catch","err","console","error","reset","className","styles","htmlFor","placeholder","onClick","onChange","target","type","name","id","disabled","ListElement","text","remove","setData","item","filter","btn","balance","create_time","latest_opration_time","List","list","container","map","Tables","data","setAdress","isDate","setDate","formatDate","miliseconds","Date","toLocaleString","compareValues","key","order","a","b","sortTable","querySelectorAll","forEach","arrow","style","backgroundColor","arr","sort","filterTable","tr","val","query","arr1","Number","toLocaleDateString","i","length","TableContainer","component","Paper","input","selects","Table","TableHead","TableRow","TableCell","thead","align","src","up","alt","down","TableBody","create_date","latest_oprt","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6a0f3504.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Table_container__3MbcM\",\"filter\":\"Table_filter__AEA6J\",\"adress\":\"Table_adress__ab-rn\",\"thead\":\"Table_thead__WU3tQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ListElement_item__30Tan\",\"btn\":\"ListElement_btn__2FOAq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3wvE7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"List_container__175AC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__eSJ6i\"};","import { useState } from 'react';\nimport styles from './Form.module.scss';\n\nconst Form = ({ add, adresses }) => {\n\n    const [disable, setDisabled] = useState(true);\n    const [adressError, setError] = useState(false);\n    const [message, setMessage] = useState(\"\");\n\n    const click = () => {\n        setError(false);\n    }\n\n    const change = e => {\n        if (e.target.value === \"\") {\n            setDisabled(true);\n        } else {\n            setDisabled(false)\n        }\n    }\n\n    const addAdress = e => {\n        e.preventDefault();\n        const form = document.querySelector('form');\n        const adress = form.querySelector('input').value;\n        let url = 'https://api.trongrid.io/wallet/validateaddress';\n        let options = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: `{\"address\": \"${adress}\"}`\n        };\n        if(!adresses.includes(adress)) {\n        fetch(url, options)\n            .then(res => res.json())\n            .then(res => {\n                if (res.result) {\n                    add(prevArray => [...prevArray, adress])\n                } else {\n                    setMessage(\"Addres isn't valid\");\n                    setError(true);\n                }\n            })\n            .catch(err => console.error('error:' + err));\n        } else {\n            setMessage('That adress was already added');\n            setError(true);\n        }\n        form.reset();\n        setDisabled(true);\n    }\n\n    return (\n        <form onSubmit={addAdress} className={styles.form}>\n        {adressError && <p>{message}</p>}\n       <label htmlFor=\"adress\">Adress: </label>\n       <input placeholder=\"Write adress here\" \n              onClick={click} \n              onChange={change} \n              type=\"text\" \n              name=\"adress\" \n              id=\"adress\" \n       />\n       <input disabled={disable} type=\"submit\" value=\"add\" />\n   </form>\n    );\n}\n\nexport default Form;","import {useState} from 'react';\nimport styles from './ListElement.module.scss';\n\nconst ListElement = ({ text, remove, setData }) => {\n    const [disable, setDisabled] = useState(false);\n\n    const removeItem = () => {\n        setData(prevArray => prevArray.filter(item => item.adress !== text));\n        remove(prevArray => prevArray.filter(item => item !== text));\n    }\n    const generate = () => {\n        let url = 'https://api.trongrid.io/wallet/getaccount';\n        let options = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: `{\"address\":\"${text}\", \"visible\": true}`\n        };\n        fetch(url, options)\n            .then(res => res.json())\n            .then(({ balance, create_time, latest_opration_time }) => {\n                setData(prevArray => [...prevArray, { adress: text, balance, create_time, latest_opration_time }]);\n                setDisabled(true);\n            })\n            .catch(err => console.error('error:' + err));\n    }\n    \n    return (\n        <div className={styles.item}>\n            <button onClick={removeItem} className={styles.btn}></button>\n            <p className={styles.adress}>{text}</p>\n            <button disabled={disable} onClick={generate} className={styles.btn}>generate</button>\n        </div>)\n}\n\nexport default ListElement; ","import styles from './List.module.scss';\nimport ListElement from './ListElement/ListElement';\n\nconst List = ({ list = [], remove, setData }) => {\n    return (\n        <div className={styles.container}>\n            {list.map(adress => <ListElement key={adress} text={adress} remove={remove} setData={setData} />)}\n        </div>\n    );\n}\n\nexport default List;","export default __webpack_public_path__ + \"static/media/up.f70b4b62.svg\";","export default __webpack_public_path__ + \"static/media/down.b6fef615.svg\";","import { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport up from '../../assets/up.svg';\nimport down from '../../assets/down.svg';\nimport styles from './Table.module.scss';\n\nconst Tables = ({ data, setData, setAdress, adresses }) => {\n\n    const copy = [...data];\n\n    const [isDate, setDate] = useState(false);\n    const formatDate = (miliseconds) => {\n        const dateObject = new Date(miliseconds);\n        return dateObject.toLocaleString();\n    }\n\n    const compareValues = (key, order = 'asc') => {\n        return function innersortTable(a, b) {\n            if (typeof a[key] === \"undefined\") {\n                return 1;\n            }\n\n            if (order === 'asc') {\n                return a[key] - b[key]\n            } else {\n                return b[key] - a[key]\n            }\n        }\n    }\n\n    const sortTable = (e, key, order) => {\n        const arrows = document.querySelectorAll('img');\n        arrows.forEach(arrow => arrow.style.backgroundColor = \"#ddd\");\n        let arr = [...data];\n        if (order === 'up') {\n            e.target.style.backgroundColor = \"#fff\";\n            arr = arr.sort(compareValues(key));\n            setData(arr);\n        } else {\n            e.target.style.backgroundColor = \"#fff\";\n            arr = arr.sort(compareValues(key, 'desc'));\n            setData(arr)\n        }\n    }\n\n    const filter = e => {\n        if (e.target.value === \"create_time\" || e.target.value === \"latest_time_operation\") {\n            setDate(true)\n        } else {\n            setDate(false)\n        }\n    }\n\n    const filterTable = (tr, val, query) => {\n        if (val === \"\") {\n            return;\n        }\n        let arr = [...data];\n        let arr1 = [...adresses];\n        if (query === \"equal\") {\n            arr = tr === \"balance\" ?\n                arr.filter(item => item[tr] === Number(val))\n                :\n                arr.filter(item => new Date(item[tr]).toLocaleDateString() === new Date(val).toLocaleDateString())\n        } else if (query === \"not_equal\") {\n            arr = tr === \"balance\" ?\n                arr.filter(item => item.balance !== Number(val))\n                :\n                arr.filter(item => new Date(item[tr]).toLocaleDateString() !== new Date(val).toLocaleDateString())\n        } else if (query === \"less_than\") {\n            arr = tr === \"balance\" ?\n                arr = arr.filter(item => item[tr] < Number(val))\n                :\n                arr.filter(item => new Date(item[tr]).toLocaleDateString() < new Date(val).toLocaleDateString())\n\n        } else {\n            arr = tr === \"balance\" ?\n                arr.filter(item => item[tr] > Number(val))\n                :\n                arr.filter(item => new Date(item[tr]).toLocaleDateString() > new Date(val).toLocaleDateString())\n        }\n        for (let i = 0; i < arr.length; i++) {\n            arr1 = arr1.filter(item => item === arr[i].adress);\n        }\n        setAdress(arr1)\n        setData(arr)\n    }\n\n    const submit = e => {\n        const form = e.target;\n        e.preventDefault();\n        const input = form.querySelector('input');\n        const selects = form.querySelectorAll('select');\n\n        if (selects[0].value === \"balance\") {\n            filterTable('balance', input.value, selects[1].value);\n        } else if (selects[0].value === \"create_time\") {\n            filterTable('create_time', input.value, selects[1].value)\n        } else {\n            filterTable('latest_opration_time', input.value, selects[1].value)\n        }\n        form.reset();\n        setDate(false)\n    }\n\n    return (\n        <TableContainer className={styles.container} component={Paper}>\n            <div className={styles.filter}>\n                <form onSubmit={submit}>\n                    <label htmlFor=\"filter\">Filter table:</label>\n                    {isDate ?\n                        <input type=\"date\" name=\"\" id=\"\" />\n                        :\n                        <input type=\"number\" name=\"filter\" id=\"filter\" />\n                    }\n                    <select name=\"trs\" id=\"trs\" onChange={filter}>\n                        <option value=\"balance\">balance</option>\n                        <option value=\"create_time\">create time</option>\n                        <option value=\"latest_time_operation\">latest time operation</option>\n                    </select>\n                    <select name=\"queries\" id=\"queries\">\n                        <option value=\"equal\">equal</option>\n                        <option value=\"not_equal\">not equal</option>\n                        <option value=\"less_than\">less than</option>\n                        <option value=\"greater_than\">greater than</option>\n                    </select>\n                    <input type=\"submit\" name=\"filter\" id=\"filter\" value=\"Filter\" />\n                </form>\n            </div>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell className={styles.adress}>adress</TableCell>\n                        <TableCell className={styles.thead} align=\"left\">\n                            <p>balance</p>\n                            <div>\n                                <img onClick={(e) => sortTable(e, 'balance', 'up')} src={up} alt=\"up\" />\n                                <img onClick={(e) => sortTable(e, 'balance', 'down')} src={down} alt=\"down\" />\n                            </div>\n                        </TableCell>\n                        <TableCell className={styles.thead} align=\"left\">\n                            <p>create time</p>\n                            <div>\n                                <img onClick={(e) => sortTable(e, 'create_time', 'up')} src={up} alt=\"up\" />\n                                <img onClick={(e) => sortTable(e, 'create_time', 'down')} src={down} alt=\"down\" />\n                            </div>\n                        </TableCell>\n                        <TableCell className={styles.thead} align=\"left\">\n                            <p>latest time operation</p>\n                            <div>\n                                <img onClick={(e) => sortTable(e, 'latest_opration_time', 'up')} src={up} alt=\"up\" />\n                                <img onClick={(e) => sortTable(e, 'latest_opration_time', 'down')} src={down} alt=\"down\" />\n                            </div>\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {data.map(item => {\n                        const create_date = formatDate(item.create_time);\n                        const latest_oprt = formatDate(item.latest_opration_time)\n                        return (\n                            <TableRow key={item.adress}>\n                                <TableCell component=\"th\">{item.adress}</TableCell>\n                                <TableCell align=\"left\">{item.balance && item.balance.toLocaleString()}</TableCell>\n                                <TableCell align=\"left\">{create_date}</TableCell>\n                                <TableCell align=\"left\">{latest_oprt}</TableCell>\n                            </TableRow>\n                        )\n                    })}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n\nexport default Tables;","import { useState } from 'react';\nimport Form from './components/Form/Form';\nimport List from './components/List/List';\nimport Table from './components/Table/Table';\nimport styles from './App.module.scss';\n\nfunction App() {\n\n  const [adresses, setAdress] = useState([]);\n  const [data, setData] = useState([]);\n\n  return (\n    <div className={styles.container}>\n      <Form add={setAdress} adresses={adresses} />\n      <List list={adresses} remove={setAdress} setData={setData} data={data} />\n      <Table data={data} setData={setData} setAdress={setAdress} adresses={adresses} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}